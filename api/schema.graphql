### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Folder {
  id: Int!
  name: String!
  tabs(after: TabWhereUniqueInput, before: TabWhereUniqueInput, first: Int, last: Int): [Tab!]!
  user: User!
}

input FolderWhereUniqueInput {
  id: Int
}

type Mutation {
  assignTabs(tabsIds: String): [Tab!]!
  createTab(content: String, instrument: String, tuning: String): Tab!
  deleteTab(tabId: String): Tab!
  enter(token: String): AuthPayload!
  saveTab(artist: String, content: String, hashId: String, instrument: String, private: Boolean, title: String, tuning: String): Tab!
  updateUser(virtualKeyboard: Boolean): User!
}

type Query {
  myTabs: [Tab!]!
  tab(tabId: String): Tab!
}

type Tab {
  artist: String!
  content: String!
  folder: Folder
  hashId: String!
  id: Int!
  instrument: String!
  private: Boolean!
  title: String!
  tuning: String!
  user: User
}

input TabWhereUniqueInput {
  id: Int
}

type User {
  email: String!
  folders(after: FolderWhereUniqueInput, before: FolderWhereUniqueInput, first: Int, last: Int): [Folder!]!
  hashId: String!
  id: Int!
  imageUrl: String!
  name: String!
  tabs(after: TabWhereUniqueInput, before: TabWhereUniqueInput, first: Int, last: Int): [Tab!]!
  username: String!
  virtualKeyboard: Boolean!
}
