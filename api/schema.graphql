### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Mutation {
  enter(email: String, externalId: String, imageUrl: String, name: String): AuthPayload!
}

type Query {
  feed: [Tab!]!
  tab(id: Int): Tab!
  users: [User!]!
}

type Tab {
  author: String!
  hashid: Int!
  id: Int!
  link: String!
  private: Boolean!
  tab: String!
  title: String!
  tune: String!
  userId: Int
}

input TabWhereUniqueInput {
  id: Int
}

type User {
  email: String!
  hashid: String!
  imageUrl: String!
  name: String!
  tabs(after: TabWhereUniqueInput, before: TabWhereUniqueInput, first: Int, last: Int): [Tab!]!
  username: String!
}
